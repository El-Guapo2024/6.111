$date
	Wed Dec  6 20:32:16 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Find_CorrectedAngles_tb $end
$var wire 1 ! new_data_out $end
$var wire 16 " distance_out [15:0] $end
$var wire 16 # angle_out [15:0] $end
$var reg 16 $ CurrentDistance [15:0] $end
$var reg 1 % Find_CorrectAngle $end
$var reg 16 & FirstSampleAngle [15:0] $end
$var reg 16 ' IntervalSampleAngle [15:0] $end
$var reg 1 ( clk_in $end
$var reg 16 ) package_Sample_Index [15:0] $end
$var reg 1 * rst_in $end
$scope module myAngleCorrector $end
$var wire 16 + FirstSampleAngle [15:0] $end
$var wire 16 , IntervalSampleAngle [15:0] $end
$var wire 1 ( clk_in $end
$var wire 1 % data_valid_in $end
$var wire 16 - distance [15:0] $end
$var wire 16 . package_Sample_Index [15:0] $end
$var wire 1 * rst_in $end
$var wire 10 / palette_address [9:0] $end
$var wire 16 0 output_arctan_map [15:0] $end
$var parameter 32 1 RAM1_DEPTH $end
$var parameter 32 2 RAM1_WIDTH $end
$var parameter 32 3 RAM2_DEPTH $end
$var parameter 32 4 RAM2_WIDTH $end
$var reg 16 5 AngleCorrectForDistance [15:0] $end
$var reg 32 6 AngleCorrectForDistance32 [31:0] $end
$var reg 16 7 angle_out [15:0] $end
$var reg 1 ! data_valid_out $end
$var reg 16 8 distance_out [15:0] $end
$var reg 14 9 input_arctan_map [13:0] $end
$var reg 32 : sample_angle [31:0] $end
$var reg 3 ; small_counter [2:0] $end
$var reg 32 < summation [31:0] $end
$var reg 32 = temporary_angle [31:0] $end
$var integer 32 > state [31:0] $end
$scope module arctan_palette_mem $end
$var wire 1 ( clka $end
$var wire 16 ? dina [15:0] $end
$var wire 1 @ ena $end
$var wire 1 A regcea $end
$var wire 1 * rsta $end
$var wire 1 B wea $end
$var wire 16 C douta [15:0] $end
$var wire 10 D addra [9:0] $end
$var parameter 280 E INIT_FILE $end
$var parameter 32 F RAM_DEPTH $end
$var parameter 128 G RAM_PERFORMANCE $end
$var parameter 32 H RAM_WIDTH $end
$var reg 16 I ram_data [15:0] $end
$scope function clogb2 $end
$var integer 32 J depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 16 K douta_reg [15:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$scope module map_mem $end
$var wire 14 L addra [13:0] $end
$var wire 1 ( clka $end
$var wire 10 M dina [9:0] $end
$var wire 1 N ena $end
$var wire 1 O regcea $end
$var wire 1 * rsta $end
$var wire 1 P wea $end
$var wire 10 Q douta [9:0] $end
$var parameter 192 R INIT_FILE $end
$var parameter 32 S RAM_DEPTH $end
$var parameter 128 T RAM_PERFORMANCE $end
$var parameter 32 U RAM_WIDTH $end
$var reg 10 V ram_data [9:0] $end
$scope function clogb2 $end
$var integer 32 W depth [31:0] $end
$upscope $end
$scope begin output_register $end
$var reg 10 X douta_reg [9:0] $end
$upscope $end
$scope begin use_init_file $end
$upscope $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 Y i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 U
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 T
b100000000000000 S
b11001000110000101110100011000010010111100101110001011100010111101100100011000010111010001100001001011110110110101100001011100000101111101101000011001010111100000101110011011010110010101101101 R
b10000 H
b1001000010010010100011101001000010111110101000001000101010100100100011001001111010100100100110101000001010011100100001101000101 G
b1000101111 F
b110010001100001011101000110000100101111001011100010111000101111011001000110000101110100011000010010111101100001011100100110001101110100011000010110111001011111011100000110000101101100011001010111010001110100011001010101111101101000011001010111100000101110011011010110010101101101 E
b10000 4
b1000101111 3
b1010 2
b100000000000000 1
$end
#0
$dumpvars
b0 Y
b0 X
bx W
b0 V
b0 Q
0P
1O
1N
b0 M
bx L
b0 K
bx J
b0 I
b0 D
b0 C
0B
1A
1@
b0 ?
b0 >
bx =
bx <
bx ;
bx :
bx 9
b0xxxxxxxxxxxxxx 8
bx 7
b0 6
b0 5
b0 0
b0 /
bx .
bx -
bx ,
bx +
x*
bx )
0(
bx '
bx &
x%
bx $
bx #
b0xxxxxxxxxxxxxx "
x!
$end
#5000
bx V
b1011010000000 I
0!
1(
#10000
1*
0(
#15000
b0 "
b0 8
1(
#20000
0*
0(
#25000
b0xxxxxxxxxxxxxx "
b0xxxxxxxxxxxxxx 8
b0x0xx0x0000000 6
b0x0xx0x0000000 5
bx /
bx D
bx Q
bx X
b1011010000000 0
b1011010000000 C
b1011010000000 K
1(
#30000
b11010010010000 #
b11010010010000 7
b11010010010000 =
b10110110 "
b10110110 8
b11010010010000 <
b1011010000000 6
b1011010000000 5
b1101100110 :
1%
b1011011001 $
b1011011001 -
b100100010 '
b100100010 ,
b11 )
b11 .
b1101010101010 &
b1101010101010 +
0(
#35000
b1 >
bx I
1(
#40000
0%
0(
#45000
bx #
bx 7
bx =
bx <
bx 6
bx 5
bx 0
bx C
bx K
b0 ;
b10 >
b10110110 9
b10110110 L
1(
#50000
0(
#55000
b1 ;
b10110110 V
1(
#60000
0(
b1 Y
#65000
b10110110 /
b10110110 D
b10110110 Q
b10110110 X
b10 ;
1(
#70000
0(
b10 Y
#75000
b11 ;
b1111111110110100 I
1(
#80000
0(
b11 Y
#85000
b1110111000100 #
b1110111000100 7
b1110111000100 =
b1110111000100 <
b11111111111111111111111110110100 6
b1111111110110100 5
b1111111110110100 0
b1111111110110100 C
b1111111110110100 K
b100 ;
1(
#90000
0(
b100 Y
#95000
b11 >
b0 ;
1(
#100000
0(
b101 Y
#105000
1!
b0 >
1(
#110000
0(
b110 Y
#115000
0!
1(
#120000
0(
b111 Y
#125000
1(
#130000
0(
b1000 Y
#135000
1(
#140000
0(
b1001 Y
#145000
1(
#150000
0(
b1010 Y
#155000
1(
#160000
0(
b1011 Y
#165000
1(
#170000
0(
b1100 Y
#175000
1(
#180000
0(
b1101 Y
#185000
1(
#190000
0(
b1110 Y
#195000
1(
#200000
0(
b1111 Y
#205000
1(
#210000
0(
b10000 Y
#215000
1(
#220000
0(
b10001 Y
#225000
1(
#230000
0(
b10010 Y
#235000
1(
#240000
0(
b10011 Y
#245000
1(
#250000
0(
b10100 Y
#255000
1(
#260000
0(
b10101 Y
#265000
1(
#270000
0(
b10110 Y
#275000
1(
#280000
0(
b10111 Y
#285000
1(
#290000
0(
b11000 Y
#295000
1(
#300000
0(
b11001 Y
#305000
1(
#310000
0(
b11010 Y
#315000
1(
#320000
0(
b11011 Y
#325000
1(
#330000
0(
b11100 Y
#335000
1(
#340000
0(
b11101 Y
#345000
1(
#350000
0(
b11110 Y
#355000
1(
#360000
0(
b11111 Y
#365000
1(
#370000
0(
b100000 Y
#375000
1(
#380000
0(
b100001 Y
#385000
1(
#390000
0(
b100010 Y
#395000
1(
#400000
0(
b100011 Y
#405000
1(
#410000
0(
b100100 Y
#415000
1(
#420000
0(
b100101 Y
#425000
1(
#430000
0(
b100110 Y
#435000
1(
#440000
0(
b100111 Y
#445000
1(
#450000
0(
b101000 Y
#455000
1(
#460000
0(
b101001 Y
#465000
1(
#470000
0(
b101010 Y
#475000
1(
#480000
0(
b101011 Y
#485000
1(
#490000
0(
b101100 Y
#495000
1(
#500000
0(
b101101 Y
#505000
1(
#510000
0(
b101110 Y
#515000
1(
#520000
0(
b101111 Y
#525000
1(
#530000
0(
b110000 Y
#535000
1(
#540000
0(
b110001 Y
#545000
1(
#550000
0(
b110010 Y
#555000
1(
#560000
0(
b110011 Y
#565000
1(
#570000
0(
b110100 Y
#575000
1(
#580000
0(
b110101 Y
#585000
1(
#590000
0(
b110110 Y
#595000
1(
#600000
0(
b110111 Y
#605000
1(
#610000
0(
b111000 Y
#615000
1(
#620000
0(
b111001 Y
#625000
1(
#630000
0(
b111010 Y
#635000
1(
#640000
0(
b111011 Y
#645000
1(
#650000
0(
b111100 Y
#655000
1(
#660000
0(
b111101 Y
#665000
1(
#670000
0(
b111110 Y
#675000
1(
#680000
0(
b111111 Y
#685000
1(
#690000
0(
b1000000 Y
#695000
1(
#700000
0(
b1000001 Y
#705000
1(
#710000
0(
b1000010 Y
#715000
1(
#720000
0(
b1000011 Y
#725000
1(
#730000
0(
b1000100 Y
#735000
1(
#740000
0(
b1000101 Y
#745000
1(
#750000
0(
b1000110 Y
#755000
1(
#760000
0(
b1000111 Y
#765000
1(
#770000
0(
b1001000 Y
#775000
1(
#780000
0(
b1001001 Y
#785000
1(
#790000
0(
b1001010 Y
#795000
1(
#800000
0(
b1001011 Y
#805000
1(
#810000
0(
b1001100 Y
#815000
1(
#820000
0(
b1001101 Y
#825000
1(
#830000
0(
b1001110 Y
#835000
1(
#840000
0(
b1001111 Y
#845000
1(
#850000
0(
b1010000 Y
#855000
1(
#860000
0(
b1010001 Y
#865000
1(
#870000
0(
b1010010 Y
#875000
1(
#880000
0(
b1010011 Y
#885000
1(
#890000
0(
b1010100 Y
#895000
1(
#900000
0(
b1010101 Y
#905000
1(
#910000
0(
b1010110 Y
#915000
1(
#920000
0(
b1010111 Y
#925000
1(
#930000
0(
b1011000 Y
#935000
1(
#940000
0(
b1011001 Y
#945000
1(
#950000
0(
b1011010 Y
#955000
1(
#960000
0(
b1011011 Y
#965000
1(
#970000
0(
b1011100 Y
#975000
1(
#980000
0(
b1011101 Y
#985000
1(
#990000
0(
b1011110 Y
#995000
1(
#1000000
0(
b1011111 Y
#1005000
1(
#1010000
0(
b1100000 Y
#1015000
1(
#1020000
0(
b1100001 Y
#1025000
1(
#1030000
0(
b1100010 Y
#1035000
1(
#1040000
0(
b1100011 Y
#1045000
1(
#1050000
0(
b1100100 Y
